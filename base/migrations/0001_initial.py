# Generated by Django 4.2 on 2023-11-12 14:55

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseSurveyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(help_text='Enter your first name', max_length=150, verbose_name='First name')),
                ('surname', models.CharField(help_text='Enter your surname', max_length=150, verbose_name='Surname')),
                ('email', models.EmailField(help_text='Enter your email address', max_length=254, unique=True, verbose_name='Email address')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Base Survey User',
                'verbose_name_plural': 'Base Survey Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BaseSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_ongoing', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Base Survey',
                'verbose_name_plural': 'Base Surveys',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('help_text', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('survey_reference', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Base Survey Question',
                'verbose_name_plural': 'Base Survey Questions',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('subtitle', models.CharField(max_length=100)),
                ('help_text', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.basesurvey')),
            ],
            options={
                'verbose_name': 'Survey Section',
                'verbose_name_plural': 'Survey Sections',
            },
        ),
        migrations.CreateModel(
            name='SectionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.section')),
            ],
            options={
                'verbose_name': 'Base Survey SectionQuestion',
                'verbose_name_plural': 'Base Survey SectionQuestions',
            },
        ),
        migrations.CreateModel(
            name='QuestionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('FREE_TEXT', 'Free text'), ('MULTIPLE_CHOICE_SINGLE', 'Multiple choice - single answer'), ('MULTIPLE_CHOICE_MULTIPLE', 'Multiple choice - multiple answer'), ('YES_NO', 'Yes/No'), ('YES_NO_OTHER', 'Yes/No/Other'), ('YES_NO_UNCERTAIN', 'Yes/No/Uncertain'), ('YES_NO_NA', 'Yes/No/Not applicable')], max_length=50)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
            ],
            options={
                'verbose_name': 'Question type',
                'verbose_name_plural': 'Question types',
            },
        ),
        migrations.CreateModel(
            name='QuestionOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.CharField(max_length=100)),
                ('help_text', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('survey_reference', models.CharField(max_length=100)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
            ],
            options={
                'verbose_name': 'Question option',
                'verbose_name_plural': 'Question options',
            },
        ),
        migrations.CreateModel(
            name='BaseSurveyUserBaseSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.basesurvey')),
                ('base_survey_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Base Survey User/Base Survey',
                'verbose_name_plural': 'Base Survey User/Base Surveys',
            },
        ),
        migrations.CreateModel(
            name='BaseResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_started_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('survey_last_updated', models.DateTimeField(blank=True, default=None, null=True)),
                ('survey_completed_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('survey_complete', models.BooleanField(default=False)),
                ('base_survey_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.basesurvey')),
            ],
            options={
                'verbose_name': 'Base Survey response',
                'verbose_name_plural': 'Base Survey responses',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('integer_selection', models.IntegerField(blank=True, default=None, null=True)),
                ('character_selection', models.IntegerField(blank=True, default=None, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.question')),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.baseresponse')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.AddConstraint(
            model_name='basesurveyuser',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('email'), name='user_email_ci_uniqueness'),
        ),
    ]
